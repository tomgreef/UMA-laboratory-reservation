package com.reserve.lab.api.model.type;

public enum PenaltyType {
    // A1 CONSTRAINTS
    RESERVATION_CONFLICT(800),
    RESERVATION_CONFLICT_WITH_ALTERNATIVE_SCHEDULE(RESERVATION_CONFLICT.getScore() / 2),
    RESERVATION_ADDITIONAL_EQUIPMENT_NOT_AVAILABLE(500),
    LABORATORY_WITH_DIFFERENT_OPERATING_SYSTEM(600),
    // A2 CONSTRAINTS
    RESERVATION_CONFLICT_PER_WEEK(RESERVATION_CONFLICT.getScore() / 10),
    RESERVATION_CONFLICT_WITH_ALTERNATIVE_SCHEDULE_PER_WEEK(RESERVATION_CONFLICT_WITH_ALTERNATIVE_SCHEDULE.getScore() / 10),
    RESERVATION_CONFLICTS_NOT_DISTRIBUTED_EQUALLY_ACROSS_SUBJECTS(200),

    // B CONSTRAINTS
    RESERVATION_PREFERRED_LABORATORY_NOT_ASSIGNED(25),
    LABORATORY_IN_DIFFERENT_LOCALIZATION(40),
    RESERVATIONS_WITH_SAME_PUBLIC_ID_NOT_IN_SAME_LABORATORY(30),

    // C CONSTRAINTS
    RESERVATIONS_OF_SAME_SUBJECT_NOT_IN_ADJACENT_LABORATORIES(50),
    RESERVATIONS_OF_SAME_SUBJECT_NOT_IN_SAME_LABORATORY(50),

    // D CONSTRAINTS
    MORE_THAN_ONE_RESERVATION_PER_GROUP(10);

    private final int score;

    PenaltyType(int score) {
        this.score = score;
    }

    public int getScore(int occurrences) {
        return score * occurrences;
    }

    public boolean isA1Constraint() {
        return this == RESERVATION_CONFLICT ||
                this == RESERVATION_CONFLICT_WITH_ALTERNATIVE_SCHEDULE ||
                this == RESERVATION_ADDITIONAL_EQUIPMENT_NOT_AVAILABLE ||
                this == LABORATORY_WITH_DIFFERENT_OPERATING_SYSTEM;
    }

    private int getScore() {
        return score;
    }
}
